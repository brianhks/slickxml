/*
 * Copyright (c) 2010, Brian Hawkins
 * Permission is granted to use this code without restriction as long
 * as this copyright notice appears in all source files.
 */
 
/**
	This script shows off some specialized rules for building java programs
	namely the JavaCompiler rule and JarFile rule
*/
 
import cpmake.*;
import cpmake.rules.*;
import cpmake.addons.java.*;
import cpmake.addons.ivy.IvyAddon;
import org.apache.tools.ant.taskdefs.optional.junit.*;
import org.apache.tools.ant.*;

print("===============================================");
classDir = "build/classes";
jarDir = "build/jar";
target = jarDir+"/slickxml.jar";

classpath = new Classpath(classDir);

ivyConfig = "*";
ivy = new IvyAddon().setup();
resolveRule = ivy.getResolveRule(ivyConfig);

//libs = new RegExFileSet("lib", ".*\\.jar").getFullFilePaths();
//classpath.addPaths(libs);


compileRule = new JavaCRule("compile", classDir)
		.setDescription("Compile java files")
		.addClasspath(classpath)
		.addSourceDir("src")
		.addClasspathProvider(resolveRule.getClasspathProvider("runtime"))
		.addDepend(resolveRule);

	
//-------------------------------------------------------------------
//==-- RULE FOR CREATING JAR --==
jarRule = new JarRule("jar", target).setDescription("Create jar file")
		.addDepend(compileRule)
		.setManifest("manifest.txt")
		.addDepend(new DirectoryRule(jarDir))
		.addFile("template/Parser.java")
		.addFileSet(new RegExFileSet(classDir, ".*\\.class").recurse());
		
//-------------------------------------------------------------------
//==-- CREATE JAVADOCS --==
new SimpleRule("javadoc").setMakeAction("doJavadoc").setDescription("Create javadocs");
void doJavadoc(Rule rule)
	{
	def = make.getDefinition("sun_javadoc");
	def.set("public").set("destination", "doc").set("source", compileRule.getSources());
	make.exec(def.getCommand());
	}
	
//-------------------------------------------------------------------
//==-- TEST --==
testRule = new SimpleRule("test").setMakeAction("doTest").setDescription("Run simple test")
		.addDepend(jarRule)
		.alwaysRun();
void doTest(Rule rule)
	{
	classpath.addPath(".");
	classpath.addPaths(resolveRule.getClasspath("runtime"));
	make.exec("java -cp "+classpath+" slickxml.SlickParser test/parser_config.xml");
	testSource = new RegExFileSet("build/test", ".*\\.java").recurse().getFullFilePaths();
	print(testSource);
	javacDef = make.getDefinition("sun_javac");
	javacDef.set("sourcepath", "build/test");
	javacDef.set("class_dir", "build/test");
	javacDef.set("sourcefile", testSource);
	make.exec(javacDef.getCommand());
	}


make.setDefaultTarget("jar");	

